
@using ControlAccesoPersonal.DataTransferObjects;
@model IEnumerable<InformeEntreFechas>

@{
    ViewData["Title"] = "Index";
    string mensaje = ViewBag.mensaje;

    var fechaf = ViewBag.ff;

    var fechaI = ViewBag.fi;

}



@if (!String.IsNullOrEmpty(mensaje))
{
    <div class="alert alert-warning" role="alert">
        @mensaje
    </div>
}


<form asp-action="Index" asp-controller="Reporte">
    <div class="card mb-5">
        <div class="card-header flex-wrap">

            <div class="input-group flex-nowrap">
                <label for="fechaInicio"> <span class="input-group-text" id="addon-wrapping1">Fecha Inicio</span> </label>
                <input class="form-control" type="date" aria-describedby="addon-wrapping1" value=@fechaI name="fechaInicio" max=@DateTime.Now.ToString("yyyy-MM-dd")  id="fechaInicio" />
            @*</div>
            <div class="input-group flex-nowrap">*@

                <label for="fechaFinal"> <span class="input-group-text" id="addon-wrapping2">Fecha Fin</span></label>
                <input class="form-control" type="date" aria-describedby="addon-wrapping2" value=@fechaf name="fechaFinal"  max=@DateTime.Now.ToString("yyyy-MM-dd") id="fechaFinal" />
            </div>
            <div class="input-group flex-column text-center">
                <input class="btn btn-primary" type="submit" value="Buscar" />
            </div>

        </div>
    </div>
</form>



    @foreach (var item in Model)
    {
        if (item != null)
        {

            @*<input hidden type="date" value="@item.fechaInicioCalculo"id= "fi" />
            <input hidden type="date" value="@item.fechaFinalCalculo" id= "ff"/>*@


<div class="card mb-4">
  

      


        <div class="card-header">
            <h3 class="text-center">

                @Html.DisplayFor(modelItem => item.Persona.nombre)
                @Html.DisplayFor(modelItem => item.Persona.nombre2)
                @Html.DisplayFor(modelItem => item.Persona.apellido)
                @Html.DisplayFor(modelItem => item.Persona.apellido2)
            </h3>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">

                    <tbody>
                        <tr>
                            @*<th></th>
                            <td></td>*@
                            <th> Horas Segun Horario </th>
                            <td class="bg-dark text-light">  @Html.DisplayFor(modelItem => item.HorasDeberiaCumplir)  </td>
                            @*<th></th>
                            <td></td>*@
                        </tr>

                        <tr>
                            <th> Tiempo Total Cumplido(HH:mm) </th>
                            @if (item.HorasDeberiaCumplir <= item.HorasCumplidas)
                            {
                                <td class="bg-success text-light">  @Html.DisplayFor(modelItem => item.HorasCumplidas):@Html.DisplayFor(modelItem => item.extraMinutosCumplidos)  </td>
                            }
                            else
                            {
                                <td class="bg-danger text-light">  @Html.DisplayFor(modelItem => item.HorasCumplidas):@Html.DisplayFor(modelItem => item.extraMinutosCumplidos)  </td>
                            }

                            <th> Tiempo Extra(min) </th>
                            @if (item.minutosExtras >= item.minutosTardanza)
                            {
                                <td class="bg-success text-light">  @Html.DisplayFor(modelItem => item.minutosExtras)</td>
                            }
                            else
                            {

                                <td class="bg-danger text-light">  @Html.DisplayFor(modelItem => item.minutosExtras)</td>
                            }

                            <th> Descanzos </th>
                            <td class="bg-dark text-light">  @Html.DisplayFor(modelItem => item.descanzos)</td>

                            <th> Feriados Trabajados </th>
                            <td class="bg-dark text-light">  @Html.DisplayFor(modelItem => item.FeriadoTrabajados)</td>
                        </tr>


                        <tr>
                            <th> Dias Con Tardanza </th>
                            @if (item.DiasConRetrazoEntrada > 0)
                            {

                                <td class="bg-danger text-light">  @Html.DisplayFor(modelItem => item.DiasConRetrazoEntrada)</td>
                            }
                            else
                            {
                                <td class="bg-success text-light">  @Html.DisplayFor(modelItem => item.DiasConRetrazoEntrada)</td>

                            }



                            <th> Tiempo Total Tardanzas( min) </th>
                            @if (item.minutosExtras >= item.minutosTardanza)
                            {
                                <td class="bg-success text-light">  @Html.DisplayFor(modelItem => item.minutosTardanza)</td>
                            }
                            else
                            {
                                <td class="bg-danger text-light">  @Html.DisplayFor(modelItem => item.minutosTardanza)</td>
                            }

                            <th> Dias Faltados </th>
                            @if (item.DiaFaltados > 0)
                            {
                                <td class="bg-danger text-light">  @Html.DisplayFor(modelItem => item.DiaFaltados)</td>
                            }
                            else
                            {
                                <td class="bg-success text-light">  @Html.DisplayFor(modelItem => item.DiaFaltados)</td>
                            }

                            <th> Dias Con Marcas Faltantes </th>
                            @if (item.MarcasFaltantes > 0)
                            {
                                <td class="bg-danger text-light">  @Html.DisplayFor(modelItem => item.MarcasFaltantes)</td>
                            }
                            else
                            {
                                <td class="bg-success text-light">  @Html.DisplayFor(modelItem => item.MarcasFaltantes)</td>

                            }
                        </tr>



                    </tbody>
                </table>
            </div>
            <div class="card-subtitle">

                <form asp-controller="Reporte" asp-action="Print" class="hidden">

                    <input hidden type="text" id="id" name="id" value=@Html.DisplayFor(modelItem => item.Empleado.id)>
                    <input hidden class="form-control" type="date" aria-describedby="addon-wrapping1" value=@fechaI name="fechaInicio" id="fechaInicio" />
                    <input hidden class="form-control" type="date" aria-describedby="addon-wrapping2" value=@fechaf name="fechaFinal" id="fechaFinal" />
                    
                    <input type="submit" class="btn btn-primary" value="Imprimir" />
                </form>

                @*// <button class="btn btn-primary" onclick="verDetalles(@item.Empleado.id)">Detalles</button>*@

                @*//   @Html.ActionLink("Detalles" , "Detalles", "Reporte", new { item.Empleado.id }, new { @class = "btn btn-primary text-light text-right" })*@
            </div>
        </div>
        <div class="card-footer">
            <p class="text-left"> <b>RUT: </b>  @Html.DisplayFor(modelItem => item.Persona.rut) </p>
            @*@Html.ActionLink("Editar", "insert", "Reporte", new { ViewBag.ff, ViewBag.fi }, new { @class = "btn btn-primary text-light text-right" })*@
        </div>
    
</div>
    }
    }




